buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.debug = "on"
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}
repositories {
//    mavenCentral()
	def dianniu="http://111.1.17.197:8080/nexus/content/groups/public"
    def aliyun = "http://maven.aliyun.com/nexus/content/groups/public/"
    def abroad = "http://central.maven.org/maven2/"
    // 先从url中下载jar若没有找到，则在artifactUrls中寻找
	maven{
		url dianniu
	}
    maven {
        url aliyun
        artifactUrls abroad 
    }
}

configurations {
    compile.exclude group: "org.springframework.boot", module: "spring-boot-starter-jetty"
    compile.exclude group: "org.codehaus.woodstox", module: "wstx-asl"
    compile.exclude group: "commons-fileupload"
}

task makeJar(type: Jar, dependsOn: classes) {
    println jarVersion
    baseName 'pscp-message-client'
    version = jarVersion

    into('com/edianniu/pscp/message/service/dubbo') {
		from ("build/classes/main/com/edianniu/pscp/message/service/dubbo"){
			exclude('impl')
		}
	}
    into('com/edianniu/pscp/message/commons') {
		from ("build/classes/main/com/edianniu/pscp/message/commons"){
			exclude('BaseDo.class')
		}
	}
	into('com/edianniu/pscp/message/bean') {
		from ("build/classes/main/com/edianniu/pscp/message/bean"){
			//exclude('impl')
		}
	}
	into('com/edianniu/pscp/message/result') {
		from ("build/classes/main/com/edianniu/pscp/message/result"){

		}
	}

    destinationDir = rootDir
}

task makeSourcesJar(type: Jar, dependsOn: classes) {
    println jarVersion
    baseName 'pscp-message-client'
    version = jarVersion
    classifier = 'sources'

    into('com/edianniu/pscp/message/commons') {
		from ("src/main/java/com/edianniu/pscp/message/commons"){
			exclude('BaseDo.java')
		}
	}
	into('com/edianniu/pscp/message/service/dubbo') {
		from ("src/main/java/com/edianniu/pscp/message/service/dubbo"){
			exclude('impl')
		}
	}
	into('com/edianniu/pscp/message/bean') {
		from ("src/main/java/com/edianniu/pscp/message/bean"){
			
		}
	}
	into('com/edianniu/pscp/message/result') {
		from ("src/main/java/com/edianniu/pscp/message/result"){

		}
	}

    destinationDir = rootDir
}

task makeJavadocJar(type: Jar, dependsOn: javadoc) {
	println jarVersion
	baseName 'pscp-message-client'
	version=jarVersion
	classifier = 'javadoc'
	into('com/edianniu/pscp/message/commons') {
		from ("src/com/edianniu/pscp/message/commons"){
			exclude('BaseDo')
		}
	}
	into('com/edianniu/pscp/message/sms/dubbo/service') {
		from ("src/com/edianniu/pscp/message/sms/dubbo/service"){
			exclude('impl')
		}
	}
	into('com/edianniu/pscp/message/bean') {
		from ("src/main/java/com/edianniu/pscp/message/bean"){

		}
	}
	into('com/edianniu/pscp/message/sms/result') {
		from ("src/com/edianniu/pscp/message/sms/result"){

		}
	}
	destinationDir = rootDir
}

artifacts {
    archives makeJar
    archives makeSourcesJar
    archives file: file("pscp-message-client-${jarVersion}.jar"), name: "pscp-message-client-${jarVersion}", type: 'jar'
	archives file: file("pscp-message-client-${jarVersion}-sources.jar"), name: "pscp-message-client-${jarVersion}-sources", type: 'jar'
}


// 项目依赖
dependencies {
    /* dubbo */
   compile("com.alibaba:dubbo:${dubbo_version}") {
        exclude(module: 'spring')
    }
   /* zookeeper */
   compile("org.apache.zookeeper:zookeeper:${zookeeper_version}") {
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'slf4j')
		exclude(module: 'log4j')
    }
    /* zkclient */
    compile("com.101tec:zkclient:${zkclient_version}") {
        exclude(module: 'spring')
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'slf4j')
		exclude(module: 'log4j')
    }
    /* zookeeper */
    /*compile ('com.github.sgroschupf:zkclient:0.1') { transitive = true }*/
    /*compile ('org.apache.zookeeper:zookeeper:3.3.6') { transitive = false }*/

    compile(
            "org.springframework.boot:spring-boot-starter:${spring_boot_version}",
            "org.springframework.boot:spring-boot-starter-web:${spring_boot_version}",
            "org.springframework.boot:spring-boot-autoconfigure:${spring_boot_version}",
    )
    
    /* spring */
	/*compile("org.springframework:spring-context-support:${springVersion}")*/
	compile("org.springframework:spring-orm:${springVersion}")
	compile("org.springframework:spring-tx:${springVersion}")
	/*compile("org.springframework:spring-webmvc:${springVersion}")
	compile("org.springframework:spring-web:${springVersion}")*/
	compile("org.springframework.data:spring-data-jpa:${springDataJpaVersion}")
	compile("org.aspectj:aspectjrt:1.7.0")
	compile("org.aspectj:aspectjweaver:1.7.0")
    
    /* common */
    compile "commons-beanutils:commons-beanutils:1.9.1"
    compile "commons-fileupload:commons-fileupload:1.3"
    compile "commons-collections:commons-collections:3.2.1"
    compile "commons-io:commons-io:2.4"
    compile "commons-lang:commons-lang:2.6"
    compile "org.apache.commons:commons-lang3:3.3.2"
    compile "org.apache.commons:commons-pool2:2.2"
    compile "com.alibaba:fastjson:1.2.39"
    compile "com.fasterxml.jackson.core:jackson-databind:2.2.2"
    compile "org.codehaus.jackson:jackson-core-asl:1.9.13"
	compile "org.codehaus.jackson:jackson-mapper-asl:1.9.13"
	
	/* commons-net */
    compile ('commons-net:commons-net:3.3') { transitive = false }
    
    /*database driver*/
	compile("postgresql:postgresql:9.1-901-1.jdbc4")
	compile("com.jolbox:bonecp:0.8.0.RELEASE")
	/* redis */
	compile("redis.clients:jedis:2.5.1")
	/* mybatis */
	compile ('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0')
   
    /* Logger */
    compile("ch.qos.logback:logback-classic:1.2.2")
    compile("org.slf4j:slf4j-api:1.7.1")
    compile("org.slf4j:jcl-over-slf4j:1.7.1")
    /*compile "org.apache.logging.log4j:log4j-api:2.9.1"*/
    /*compile "org.apache.logging.log4j:log4j-core:2.9.1"*/
    
	/** kafka **/
	compile ("org.apache.kafka:kafka-clients:0.10.0.0")
	
	/* gexin */
	compile 'com.gexin.platform:gexin-rp-sdk-http:4.0.1.2'
	compile 'com.gexin.platform:gexin-rp-sdk-base:4.0.0.7'
	compile 'com.gexin.platform:gexin-rp-sdk-template:4.0.0.5'
	compile 'com.google.protobuf:protobuf-java:3.0.0'
	/*http*/
	compile 'org.apache.httpcomponents:httpcore:4.4.3'
	compile 'org.apache.httpcomponents:httpclient:4.5.1'
	testCompile 'org.apache.httpcomponents:httpmime:4.5.1'
	
	/* ORM */
    compile "org.hibernate:hibernate-core:4.2.7.SP1"
    compile "org.hibernate:hibernate-entitymanager:4.2.7.SP1"
    compile "org.hibernate:hibernate-validator:5.0.1.Final"
    compile "org.hibernate:hibernate-ehcache:4.2.7.SP1"
    compile "net.sf.ehcache:ehcache-core:2.6.5"
	
	/* pscp-search-client */
	compile 'com.edianniu.pscp.search:pscp-search-client:1.0.24'
	/* pscp-mis-client */
    compile 'com.edianniu.pscp.mis:pscp-mis-client:3.8.20'
	/* stc */
	compile('skymobi.stc:stc-cache:1.0.5') { transitive = false }
	
    testCompile ("junit:junit")
	testCompile "org.springframework.boot:spring-boot-starter-test:${spring_boot_version}"
}
