<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edianniu.pscp.renter.mis.dao.RenterChargeOrderDao">
	<insert id="save" parameterType="com.edianniu.pscp.renter.mis.domain.RenterChargeOrder">
		INSERT INTO pscp_renter_charge_order(
		id,
		renter_id,
		order_id,
		last_check_date,
		this_check_date,
		this_period_reading,
		last_period_reading,
		pay_status,
		quantity,
		charge,
		prepaid_charge,
		status,
		create_time,
		create_user,
		deleted
		)
		VALUES(
		nextval('seq_pscp_renter_charge_order'),
		#{renterId},
		#{orderId},
		#{lastCheckDate},
		#{thisCheckDate},
		#{thisPeriodReading},
		#{lastPeriodReading},
		#{payStatus},
		#{quantity},
		#{charge},
		#{prepaidCharge},
		#{status},
		now(),
		#{createUser},
		#{deleted}
		)
		<selectKey resultType="java.lang.Long" keyProperty="id">
			SELECT currval('seq_pscp_renter_charge_order') as id;
		</selectKey>
	</insert>
	<update id="update" parameterType="com.edianniu.pscp.renter.mis.domain.RenterChargeOrder">
		UPDATE pscp_renter_charge_order
		<set>
			<if test="quantity != null">quantity = #{quantity},</if>
			<if test="charge != null">charge = #{charge},</if>
			<if test="prepaidCharge != null">prepaid_charge = #{prepaidCharge},</if>
			<if test="status != null">status = #{status},</if>
			modified_user = #{modifiedUser},
			modified_time = now()
		</set>
		WHERE deleted = 0
		<if test="id != null">AND id = #{id}</if>
		<if test="renterId != null">AND renter_id = #{renterId}</if>
	</update>
	<select id="getNopayInfo" parameterType="java.lang.Long"
			resultType="com.edianniu.pscp.renter.mis.bean.renter.NopayInfo">
		SELECT renter_id AS renterId,
		COUNT(renter_id) AS nopayCount,
		COALESCE(SUM(charge), 0) AS nopayCharge
		FROM pscp_renter_charge_order
		WHERE deleted = 0 AND pay_status = 0
		GROUP BY renter_id
		limit 1
	</select>
	
	<select id="queryTotal" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM pscp_renter_charge_order o
		LEFT JOIN pscp_renter_config c ON c.renter_id = o.renter_id AND c.deleted = 0
		WHERE o.deleted = 0 AND o.renter_id = #{renterId} 
		<if test="payStatus != null">AND pay_status = #{payStatus} </if>
	</select>
	
	<select id="queryList" parameterType="map" 
		resultType="com.edianniu.pscp.renter.mis.domain.RenterChargeOrder">
		SELECT o.* ,c.charge_mode
		FROM pscp_renter_charge_order o
		LEFT JOIN pscp_renter_config c ON c.renter_id = o.renter_id AND c.deleted = 0
		WHERE o.deleted = 0 AND o.renter_id = #{renterId}
		<if test="payStatus != null">AND o.pay_status = #{payStatus} </if>
		ORDER BY o.create_time DESC
		<if test="offset != null and limit != null">
			offset #{offset} limit #{limit}
		</if>
	</select>
	
	<select id="queryObject" parameterType="java.lang.Long"
		resultType="com.edianniu.pscp.renter.mis.domain.RenterChargeOrder">
		SELECT o.*, r.company_id, c.charge_mode
		FROM pscp_renter_charge_order o
		LEFT JOIN pscp_company_renter r ON o.renter_id = r.id AND r.deleted = 0
		LEFT JOIN pscp_renter_config c ON c.renter_id = o.renter_id AND c.deleted = 0
		WHERE o.deleted = 0 AND o.id = #{id}
	</select>
	<select id="getByRenterIdAndFromDateAndToDate" parameterType="map" 
		resultType="com.edianniu.pscp.renter.mis.domain.RenterChargeOrder">
		SELECT * FROM pscp_renter_charge_order
		WHERE 
		renter_id = #{renterId} and
		to_char(last_check_date,'yyyyMMdd')=#{fromDate} and 
		to_char(this_check_date,'yyyyMMdd')=#{toDate} and 
		deleted = 0
	</select>
	<select id="getCountByRenterIdAndFromDateAndToDate" parameterType="map" 
		resultType="java.lang.Integer">
		SELECT count(*) FROM pscp_renter_charge_order
		WHERE 
		renter_id = #{renterId} and
		to_char(last_check_date,'yyyyMMdd')=#{fromDate} and 
		to_char(this_check_date,'yyyyMMdd')=#{toDate} and 
		deleted = 0
	</select>
	<select id="getPrePaymentUnsettledOrders"
		resultType="java.lang.String">
		SELECT t1.order_id FROM pscp_renter_charge_order t1 
		left join pscp_renter_config t2 on t1.renter_id=t2.renter_id 
		WHERE 
		t2.charge_mode=1 and 
		<!-- t1.prepaid_charge&lt;t1.charge and  -->
		t1.pay_status=0 and 
		t1.deleted = 0 and t2.deleted=0
		order by t1.renter_id asc,t1.this_check_date asc
		limit #{limit}
	</select>
	

    		
    
</mapper>
