<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edianniu.pscp.sps.dao.MemberPayOrderDao">

    <select id="queryObject" resultType="com.edianniu.pscp.sps.domain.MemberPayOrder">
		select * from pscp_member_pay_order where id = #{value} and deleted=0
	</select>

    <select id="queryList" resultType="com.edianniu.pscp.sps.domain.MemberPayOrder">
        select * from pscp_member_pay_order where deleted=0 order by create_time desc
        <if test="offset != null and limit != null">
            limit #{limit} offset #{offset}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
		select count(*) from pscp_member_pay_order  where deleted=0
	</select>

    <select id="queryEntityByOrderId" parameterType="string"
            resultType="com.edianniu.pscp.sps.domain.MemberPayOrder">
 		SELECT * FROM pscp_member_pay_order
	 	WHERE deleted=0
 		AND order_id = #{orderId}
    </select>

    <insert id="save" parameterType="com.edianniu.pscp.sps.domain.MemberPayOrder">
		insert into pscp_member_pay_order
		(
			`id`, 
			`uid`, 
			`order_type`, 
			`order_id`, 
			`pay_order_id`, 
			`title`, 
			`body`, 
			`amount`, 
			`pay_type`, 
			`pay_method`, 
			`pay_time`, 
			`pay_sync_time`, 
			`pay_async_time`, 
			`status`, 
			`memo`, 
			`create_time`, 
			`create_user`, 
			`modified_time`, 
			`modified_user`, 
			`deleted`
		)
		values
		(
			#{id}, 
			#{uid}, 
			#{orderType}, 
			#{orderId}, 
			#{payOrderId}, 
			#{title}, 
			#{body}, 
			#{amount}, 
			#{payType}, 
			#{payMethod}, 
			#{payTime}, 
			#{paySyncTime}, 
			#{payAsyncTime}, 
			#{status}, 
			#{memo}, 
			#{createTime}, 
			#{createUser}, 
			#{modifiedTime}, 
			#{modifiedUser}, 
			#{deleted}
		)
	</insert>

    <update id="update" parameterType="com.edianniu.pscp.sps.domain.MemberPayOrder">
        update pscp_member_pay_order
        <set>
            <if test="uid != null">`uid` = #{uid},</if>
            <if test="orderType != null">`order_type` = #{orderType},</if>
            <if test="orderId != null">`order_id` = #{orderId},</if>
            <if test="payOrderId != null">`pay_order_id` = #{payOrderId},</if>
            <if test="title != null">`title` = #{title},</if>
            <if test="body != null">`body` = #{body},</if>
            <if test="amount != null">`amount` = #{amount},</if>
            <if test="payType != null">`pay_type` = #{payType},</if>
            <if test="payMethod != null">`pay_method` = #{payMethod},</if>
            <if test="payTime != null">`pay_time` = #{payTime},</if>
            <if test="paySyncTime != null">`pay_sync_time` = #{paySyncTime},</if>
            <if test="payAsyncTime != null">`pay_async_time` = #{payAsyncTime},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="memo != null">`memo` = #{memo},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="createUser != null">`create_user` = #{createUser},</if>
            <if test="modifiedTime != null">`modified_time` = #{modifiedTime},</if>
            <if test="modifiedUser != null">`modified_user` = #{modifiedUser},</if>
            <if test="deleted != null">`deleted` = #{deleted}</if>
        </set>
        where id = #{id} and deleted=0
    </update>

    <delete id="delete">
        UPDATE pscp_member_pay_order
        SET deleted = -1, modified_time = now(), modified_user = ${modifiedUser}
        WHERE id = #{value}
    </delete>
    <delete id="deleteBatch">
        update pscp_member_pay_order set deleted=-1,modified_time=now(),modified_user=${modifiedUser} where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>